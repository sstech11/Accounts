/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Journals as PrismaJournals } from "@prisma/client";

export class JournalsServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.JournalsCountArgs, "select">): Promise<number> {
    return this.prisma.journals.count(args);
  }

  async journalsItems(
    args: Prisma.JournalsFindManyArgs
  ): Promise<PrismaJournals[]> {
    return this.prisma.journals.findMany(args);
  }
  async journals(
    args: Prisma.JournalsFindUniqueArgs
  ): Promise<PrismaJournals | null> {
    return this.prisma.journals.findUnique(args);
  }
  async createJournals(
    args: Prisma.JournalsCreateArgs
  ): Promise<PrismaJournals> {
    return this.prisma.journals.create(args);
  }
  async updateJournals(
    args: Prisma.JournalsUpdateArgs
  ): Promise<PrismaJournals> {
    return this.prisma.journals.update(args);
  }
  async deleteJournals(
    args: Prisma.JournalsDeleteArgs
  ): Promise<PrismaJournals> {
    return this.prisma.journals.delete(args);
  }
}
