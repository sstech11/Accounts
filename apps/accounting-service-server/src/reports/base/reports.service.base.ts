/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Reports as PrismaReports } from "@prisma/client";

export class ReportsServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.ReportsCountArgs, "select">): Promise<number> {
    return this.prisma.reports.count(args);
  }

  async reportsItems(
    args: Prisma.ReportsFindManyArgs
  ): Promise<PrismaReports[]> {
    return this.prisma.reports.findMany(args);
  }
  async reports(
    args: Prisma.ReportsFindUniqueArgs
  ): Promise<PrismaReports | null> {
    return this.prisma.reports.findUnique(args);
  }
  async createReports(args: Prisma.ReportsCreateArgs): Promise<PrismaReports> {
    return this.prisma.reports.create(args);
  }
  async updateReports(args: Prisma.ReportsUpdateArgs): Promise<PrismaReports> {
    return this.prisma.reports.update(args);
  }
  async deleteReports(args: Prisma.ReportsDeleteArgs): Promise<PrismaReports> {
    return this.prisma.reports.delete(args);
  }
}
