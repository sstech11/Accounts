/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Ledger as PrismaLedger } from "@prisma/client";

export class LedgerServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.LedgerCountArgs, "select">): Promise<number> {
    return this.prisma.ledger.count(args);
  }

  async ledgers(args: Prisma.LedgerFindManyArgs): Promise<PrismaLedger[]> {
    return this.prisma.ledger.findMany(args);
  }
  async ledger(
    args: Prisma.LedgerFindUniqueArgs
  ): Promise<PrismaLedger | null> {
    return this.prisma.ledger.findUnique(args);
  }
  async createLedger(args: Prisma.LedgerCreateArgs): Promise<PrismaLedger> {
    return this.prisma.ledger.create(args);
  }
  async updateLedger(args: Prisma.LedgerUpdateArgs): Promise<PrismaLedger> {
    return this.prisma.ledger.update(args);
  }
  async deleteLedger(args: Prisma.LedgerDeleteArgs): Promise<PrismaLedger> {
    return this.prisma.ledger.delete(args);
  }
}
